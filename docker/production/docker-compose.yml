version: "3.9"
services:
  push-db:
    build:
      context: ../../
      dockerfile: docker/production/push-db.dockerfile
    image: push-db-img
    container_name: push-db
    depends_on:
      - postgres

  reverse-proxy:
    build:
      context: .
      dockerfile: ./nginx.dockerfile
    image: reverse-proxy-img
    restart: always
    container_name: reverse-proxy
    volumes:
      - ./conf/nginx/certificates:/etc/nginx/certs
    ports:
      - "8080:80"
      - "8443:443"
    links:
      - app
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://host.docker.internal:12201"
        tag: "nginx-proxy"
    networks:
      default:
        aliases:
          - vimsnap.local

  app:
    platform: "linux/amd64"
    build:
      context: ../../
      dockerfile: ./Dockerfile
      args:
        NEXT_PUBLIC_CLIENTVAR: "clientvar"
    working_dir: /app
    image: vimsnap-img
    container_name: vimsnap
    # extra_hosts:
    #   - "t3.local:reverse-proxy"
    depends_on:
      - minio
      - postgres
      - valkey
      - seqgelf
      - seq
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://host.docker.internal:12201"
        tag: "app"
  # docs:
  #   platform: "linux/amd64"
  #   build:
  #     context: ../../apps/docs
  #     dockerfile: ../../docker/production/docs.dockerfile
  #   working_dir: /app
  #   ports:
  #     - "3001:3000"
  #   image: docs

  minio:
    image: quay.io/minio/minio
    container_name: minio
    command: server /data --console-address ":9001"
    # To setup the keys, you need to execute the folowing command : docker exec -it CONTAINER_ID sh /init_minio_keys.sh
    ports:
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: root
      MINIO_ROOT_PASSWORD: password
    volumes:
      - ./minio_data:/data
      - ./conf/minio/init_minio_keys.sh:/init_minio_keys.sh
    depends_on:
      seqgelf:
        condition: service_started
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://host.docker.internal:12201"
        tag: "minio"

  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: "postgres"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    depends_on:
      seqgelf:
        condition: service_started
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://host.docker.internal:12201"
        tag: "postgres"

  #To add password to valkey, you need to mount the config file to the container
  #Valkey is the real open source version of redis ^^
  valkey:
    image: valkey/valkey:7.2
    container_name: valkey
    volumes:
      - ./valkey_data:/data
      - ./conf/valkey/valkey.conf:/usr/local/etc/valkey/valkey.conf
    depends_on:
      seqgelf:
        condition: service_started
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://host.docker.internal:12201"
        tag: "valkey"
    # change config file used by valkey
    command: ["valkey-server", "/usr/local/etc/valkey/valkey.conf"]
  seq:
    image: datalust/seq:latest
    container_name: seq
    ports:
      - "5341:5341"
      - "8081:80"
    environment:
      ACCEPT_EULA: Y
      SEQ_FIRSTRUN_ADMINPASSWORDHASH: "QClVohSl+wWPiOeSZPGg1W/GL/LvZpenKDaQpOspru14nTBT4uzLiAMBZU81NsguhMSKZ0qv7VjSfLaQeiY6MRSrwel9grGujBo50LFlhcOG"
    volumes:
      - ./seq_data:/data
  seqgelf:
    image: datalust/seq-input-gelf
    container_name: seq_forwarder
    environment:
      SEQ_ADDRESS: "http://seq:5341"
    ports:
      - "12201:12201/udp"
    depends_on:
      seq:
        condition: service_started
# TODO
# Add new container node to push prisma schema to the database postgres
# volume sur le r√©pertoir du schema prisma
# env file for DATABASE_URL in container node
# Instead of execute the command in app container

# TODO
# Config reverse proxy rediriger le traffic http vers https
